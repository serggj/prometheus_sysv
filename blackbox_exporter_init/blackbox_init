#!/bin/bash
### BEGIN INIT INFO
# Provides:          blackbox_exporter
# Required-Start:    $local_fs $network $named $time $syslog
# Required-Stop:     $local_fs $network $named $time $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Description:       blackbox_exporter - Monitoring system & time series database
### END INIT INFO

WORKING_DIR=/etc/blackbox_exporter
DAEMON=/usr/local/bin/blackbox_exporter
NAME=blackbox_exporter 
USER=blackbox_exporter 
PIDDIR=/var/run/blackbox_exporter
LOGDIR=/var/log/blackbox_exporter
PIDFILE=${PIDDIR}/$NAME.pid 
LOGFILE=${LOGDIR}/$NAME.log
CONFFILE=${WORKING_DIR}/blackbox_exporter.conf

do_start_prepare() 
{ 
  if test ! -d "$PIDDIR"; then
    mkdir "$PIDDIR"
    chown -R $USER $PIDDIR
  fi
  if test ! -d "$LOGDIR"; then
    mkdir "$LOGDIR"
    chown -R $USER $LOGDIR
  fi
} 

# define LSB log_* functions.
. /lib/lsb/init-functions

if [ -r "${CONFFILE}" ]
then
    . "${CONFFILE}"
fi

set -e

case "$1" in
  start)
    log_daemon_msg "Starting $NAME"
    if [ -e $PIDFILE ]; then
        _pid=$(cat ${PIDFILE})
        if kill -0 $_pid >/dev/null 2>&1; then
            if  fgrep -q $NAME /proc/$_pid/cmdline; then
                log_daemon_msg "Daemon already running with pid = $_pid"
                log_end_msg 1
                exit 1
            fi
        fi
    fi
    do_start_prepare
    start-stop-daemon -c $USER -C --background --start --pidfile $PIDFILE --make-pidfile -d "$WORKING_DIR" --exec $DAEMON -- $OPTIONS >> $LOGFILE 2>&1
    case "$?" in
        0) log_end_msg 0 ;;
        *) log_end_msg 1; exit 1 ;;
    esac
    ;;
  status)
    if [ -e $PIDFILE ]; then
        _pid=$(cat ${PIDFILE})
        if kill -0 $_pid >/dev/null 2>&1; then
            if  fgrep -q $DAEMON /proc/$_pid/cmdline; then
                log_success_msg "$DAEMON running with pid = $_pid"
                exit 0
            fi
        fi
    fi
    log_failure_msg "$DAEMON isn't running"; exit 1
    ;;
  stop)
    log_daemon_msg "Stopping $NAME"
    start-stop-daemon -c $USER --stop --oknodo --pidfile $PIDFILE --retry 5
    case "$?" in
        0) log_end_msg 0 ;rm -f $PIDFILE ;;
        *) log_end_msg 1; exit 1 ;;
    esac
    ;;
  restart|force-reload)
    if [ -f "$PIDFILE" ]; then
        $0 stop
        sleep 1
    fi
    $0 start
    ;;
  *)
    log_success_msg "Usage: $0 {start|stop|restart|force-reload|status}"
    exit 3
    ;;
esac
